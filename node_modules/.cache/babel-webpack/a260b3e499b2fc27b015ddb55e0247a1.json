{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar firebase = require('@firebase/app');\n\nrequire('@firebase/installations');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\n\n\nvar CachingClient =\n/** @class */\nfunction () {\n  function CachingClient(client, storage, storageCache, logger) {\n    this.client = client;\n    this.storage = storage;\n    this.storageCache = storageCache;\n    this.logger = logger;\n  }\n  /**\r\n   * Returns true if the age of the cached fetched configs is less than or equal to\r\n   * {@link Settings#minimumFetchIntervalInSeconds}.\r\n   *\r\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n   * native Fetch API.\r\n   *\r\n   * <p>Visible for testing.\r\n   */\n\n\n  CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    } // Calculates age of cache entry.\n\n\n    var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n    var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n    this.logger.debug('Config fetch cache check.' + (\" Cache age millis: \" + cacheAgeMillis + \".\") + (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") + (\" Is cache hit: \" + isCachedDataFresh + \".\"));\n    return isCachedDataFresh;\n  };\n\n  CachingClient.prototype.fetch = function (request) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(), this.storage.getLastSuccessfulFetchResponse()])];\n\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1]; // Exits early on cache hit.\n\n            if (lastSuccessfulFetchResponse && this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\n              return [2\n              /*return*/\n              , lastSuccessfulFetchResponse];\n            } // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n            // that allows the caller to pass an ETag.\n\n\n            request.eTag = lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n            return [4\n            /*yield*/\n            , this.client.fetch(request)];\n\n          case 2:\n            response = _b.sent();\n            storageOperations = [// Uses write-through cache for consistency with synchronous public API.\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];\n\n            if (response.status === 200) {\n              // Caches response only if it has changed, ie non-304 responses.\n              storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(storageOperations)];\n\n          case 3:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  return CachingClient;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"registration-window\"\n/* REGISTRATION_WINDOW */\n] = 'Undefined window object. This SDK only supports usage in a browser environment.', _a[\"registration-project-id\"\n/* REGISTRATION_PROJECT_ID */\n] = 'Undefined project identifier. Check Firebase app initialization.', _a[\"registration-api-key\"\n/* REGISTRATION_API_KEY */\n] = 'Undefined API key. Check Firebase app initialization.', _a[\"registration-app-id\"\n/* REGISTRATION_APP_ID */\n] = 'Undefined app identifier. Check Firebase app initialization.', _a[\"storage-open\"\n/* STORAGE_OPEN */\n] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\"storage-get\"\n/* STORAGE_GET */\n] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\"storage-set\"\n/* STORAGE_SET */\n] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\"storage-delete\"\n/* STORAGE_DELETE */\n] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.', _a[\"fetch-client-network\"\n/* FETCH_NETWORK */\n] = 'Fetch client failed to connect to a network. Check Internet connection.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-timeout\"\n/* FETCH_TIMEOUT */\n] = 'The config fetch request timed out. ' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.', _a[\"fetch-throttle\"\n/* FETCH_THROTTLE */\n] = 'The config fetch request timed out while in an exponential backoff state.' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.', _a[\"fetch-client-parse\"\n/* FETCH_PARSE */\n] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-status\"\n/* FETCH_STATUS */\n] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a);\nvar ERROR_FACTORY = new util.ErrorFactory('remoteconfig'\n/* service */\n, 'Remote Config'\n/* service name */\n, ERROR_DESCRIPTION_MAP); // Note how this is like typeof/instanceof, but for ErrorCode.\n\nfunction hasErrorCode(e, errorCode) {\n  return e instanceof util.FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\n\n\nfunction getUserLanguage(navigatorLanguage) {\n  if (navigatorLanguage === void 0) {\n    navigatorLanguage = navigator;\n  }\n\n  return (// Most reliable, but only supported in Chrome/Firefox.\n    navigatorLanguage.languages && navigatorLanguage.languages[0] || // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language // Polyfill otherwise.\n\n  );\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\n\n\nvar RestClient =\n/** @class */\nfunction () {\n  function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\n    this.firebaseInstallations = firebaseInstallations;\n    this.sdkVersion = sdkVersion;\n    this.namespace = namespace;\n    this.projectId = projectId;\n    this.apiKey = apiKey;\n    this.appId = appId;\n  }\n  /**\r\n   * Fetches from the Remote Config REST API.\r\n   *\r\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n   * connect to the network.\r\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n   * fetch response.\r\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n   */\n\n\n  RestClient.prototype.fetch = function (request) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.firebaseInstallations.getId(), this.firebaseInstallations.getToken()])];\n\n          case 1:\n            _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\n            urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com';\n            url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\n            headers = {\n              'Content-Type': 'application/json',\n              'Content-Encoding': 'gzip',\n              // Deviates from pure decorator by not passing max-age header since we don't currently have\n              // service behavior using that header.\n              'If-None-Match': request.eTag || '*'\n            };\n            requestBody = {\n              /* eslint-disable camelcase */\n              sdk_version: this.sdkVersion,\n              app_instance_id: installationId,\n              app_instance_id_token: installationToken,\n              app_id: this.appId,\n              language_code: getUserLanguage()\n              /* eslint-enable camelcase */\n\n            };\n            options = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(requestBody)\n            };\n            fetchPromise = fetch(url, options);\n            timeoutPromise = new Promise(function (_resolve, reject) {\n              // Maps async event listener to Promise API.\n              request.signal.addEventListener(function () {\n                // Emulates https://heycam.github.io/webidl/#aborterror\n                var error = new Error('The operation was aborted.');\n                error.name = 'AbortError';\n                reject(error);\n              });\n            });\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , Promise.race([fetchPromise, timeoutPromise])];\n\n          case 3:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , fetchPromise];\n\n          case 4:\n            response = _b.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            originalError_1 = _b.sent();\n            errorCode = \"fetch-client-network\"\n            /* FETCH_NETWORK */\n            ;\n\n            if (originalError_1.name === 'AbortError') {\n              errorCode = \"fetch-timeout\"\n              /* FETCH_TIMEOUT */\n              ;\n            }\n\n            throw ERROR_FACTORY.create(errorCode, {\n              originalErrorMessage: originalError_1.message\n            });\n\n          case 6:\n            status = response.status;\n            responseEtag = response.headers.get('ETag') || undefined;\n            if (!(response.status === 200)) return [3\n            /*break*/\n            , 11];\n            responseBody = void 0;\n            _b.label = 7;\n\n          case 7:\n            _b.trys.push([7, 9,, 10]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 8:\n            responseBody = _b.sent();\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            originalError_2 = _b.sent();\n            throw ERROR_FACTORY.create(\"fetch-client-parse\"\n            /* FETCH_PARSE */\n            , {\n              originalErrorMessage: originalError_2.message\n            });\n\n          case 10:\n            config = responseBody['entries'];\n            state = responseBody['state'];\n            _b.label = 11;\n\n          case 11:\n            // Normalizes based on legacy state.\n            if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n              status = 500;\n            } else if (state === 'NO_CHANGE') {\n              status = 304;\n            } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n              // These cases can be fixed remotely, so normalize to safe value.\n              config = {};\n            } // Normalize to exception-based control flow for non-success cases.\n            // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n            // differentiating success states (200 from 304; the state body param is undefined in a\n            // standard 304).\n\n\n            if (status !== 304 && status !== 200) {\n              throw ERROR_FACTORY.create(\"fetch-status\"\n              /* FETCH_STATUS */\n              , {\n                httpStatus: status\n              });\n            }\n\n            return [2\n            /*return*/\n            , {\n              status: status,\n              eTag: responseEtag,\n              config: config\n            }];\n        }\n      });\n    });\n  };\n\n  return RestClient;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\n\n\nvar RemoteConfigAbortSignal =\n/** @class */\nfunction () {\n  function RemoteConfigAbortSignal() {\n    this.listeners = [];\n  }\n\n  RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\n    this.listeners.push(listener);\n  };\n\n  RemoteConfigAbortSignal.prototype.abort = function () {\n    this.listeners.forEach(function (listener) {\n      return listener();\n    });\n  };\n\n  return RemoteConfigAbortSignal;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\nvar DEFAULT_VALUE_FOR_STRING = '';\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nvar Value =\n/** @class */\nfunction () {\n  function Value(_source, _value) {\n    if (_value === void 0) {\n      _value = DEFAULT_VALUE_FOR_STRING;\n    }\n\n    this._source = _source;\n    this._value = _value;\n  }\n\n  Value.prototype.asString = function () {\n    return this._value;\n  };\n\n  Value.prototype.asBoolean = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  };\n\n  Value.prototype.asNumber = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n\n    var num = Number(this._value);\n\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n\n    return num;\n  };\n\n  Value.prototype.getSource = function () {\n    return this._source;\n  };\n\n  return Value;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\n\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\n\nvar RemoteConfig =\n/** @class */\nfunction () {\n  function RemoteConfig( // Required by FirebaseServiceFactory interface.\n  app, // JS doesn't support private yet\n  // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n  // underscore prefix.\n  _client, _storageCache, _storage, _logger) {\n    this.app = app;\n    this._client = _client;\n    this._storageCache = _storageCache;\n    this._storage = _storage;\n    this._logger = _logger; // Tracks completion of initialization promise.\n\n    this._isInitializationComplete = false;\n    this.settings = {\n      fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n      minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n    };\n    this.defaultConfig = {};\n  } // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n\n\n  RemoteConfig.prototype.setLogLevel = function (logLevel) {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = logger.LogLevel.DEBUG;\n        break;\n\n      case 'silent':\n        this._logger.logLevel = logger.LogLevel.SILENT;\n        break;\n\n      default:\n        this._logger.logLevel = logger.LogLevel.ERROR;\n    }\n  };\n\n  Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\n    get: function () {\n      return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\n    get: function () {\n      return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RemoteConfig.prototype.activate = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchResponse, activeConfigEtag;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this._storage.getLastSuccessfulFetchResponse(), this._storage.getActiveConfigEtag()])];\n\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\n\n            if (!lastSuccessfulFetchResponse || !lastSuccessfulFetchResponse.config || !lastSuccessfulFetchResponse.eTag || lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\n              // Either there is no successful fetched config, or is the same as current active\n              // config.\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config), this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])];\n\n          case 2:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.ensureInitialized = function () {\n    var _this = this;\n\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache.loadFromStorage().then(function () {\n        _this._isInitializationComplete = true;\n      });\n    }\n\n    return this._initializePromise;\n  };\n  /**\r\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n   * {@link Settings.fetchTimeoutInSeconds} or\r\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n   */\n\n\n  RemoteConfig.prototype.fetch = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var abortSignal, e_1, lastFetchStatus;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            abortSignal = new RemoteConfigAbortSignal();\n            setTimeout(function () {\n              return tslib.__awaiter(_this, void 0, void 0, function () {\n                return tslib.__generator(this, function (_a) {\n                  // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n                  abortSignal.abort();\n                  return [2\n                  /*return*/\n                  ];\n                });\n              });\n            }, this.settings.fetchTimeoutMillis);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this._client.fetch({\n              cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n              signal: abortSignal\n            })];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._storageCache.setLastFetchStatus('success')];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            e_1 = _a.sent();\n            lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\"\n            /* FETCH_THROTTLE */\n            ) ? 'throttle' : 'failure';\n            return [4\n            /*yield*/\n            , this._storageCache.setLastFetchStatus(lastFetchStatus)];\n\n          case 5:\n            _a.sent();\n\n            throw e_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.fetchAndActivate = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.fetch()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.activate()];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.getAll = function () {\n    var _this = this;\n\n    return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\n      allConfigs[key] = _this.getValue(key);\n      return allConfigs;\n    }, {});\n  };\n\n  RemoteConfig.prototype.getBoolean = function (key) {\n    return this.getValue(key).asBoolean();\n  };\n\n  RemoteConfig.prototype.getNumber = function (key) {\n    return this.getValue(key).asNumber();\n  };\n\n  RemoteConfig.prototype.getString = function (key) {\n    return this.getValue(key).asString();\n  };\n\n  RemoteConfig.prototype.getValue = function (key) {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" + ' Await on ensureInitialized if the intent was to get a previously activated value.');\n    }\n\n    var activeConfig = this._storageCache.getActiveConfig();\n\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n\n    this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" + ' Define a default or remote value if this is unintentional.');\n\n    return new Value('static');\n  };\n\n  return RemoteConfig;\n}();\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\n\n\nfunction getAllKeys(obj1, obj2) {\n  if (obj1 === void 0) {\n    obj1 = {};\n  }\n\n  if (obj2 === void 0) {\n    obj2 = {};\n  }\n\n  return Object.keys(tslib.__assign(tslib.__assign({}, obj1), obj2));\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\n\n\nfunction toFirebaseError(event, errorCode) {\n  var originalError = event.target.error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\n\n\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\nvar DB_NAME = 'firebase_remote_config';\nvar DB_VERSION = 1; // Visible for testing.\n\nfunction openDatabase() {\n  return new Promise(function (resolve, reject) {\n    var request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    request.onerror = function (event) {\n      reject(toFirebaseError(event, \"storage-open\"\n      /* STORAGE_OPEN */\n      ));\n    };\n\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n\n    request.onupgradeneeded = function (event) {\n      var db = event.target.result; // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n/**\r\n * Abstracts data persistence.\r\n */\n\n\nvar Storage =\n/** @class */\nfunction () {\n  /**\r\n   * @param appId enables storage segmentation by app (ID + name).\r\n   * @param appName enables storage segmentation by app (ID + name).\r\n   * @param namespace enables storage segmentation by namespace.\r\n   */\n  function Storage(appId, appName, namespace, openDbPromise) {\n    if (openDbPromise === void 0) {\n      openDbPromise = openDatabase();\n    }\n\n    this.appId = appId;\n    this.appName = appName;\n    this.namespace = namespace;\n    this.openDbPromise = openDbPromise;\n  }\n\n  Storage.prototype.getLastFetchStatus = function () {\n    return this.get('last_fetch_status');\n  };\n\n  Storage.prototype.setLastFetchStatus = function (status) {\n    return this.set('last_fetch_status', status);\n  }; // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n\n\n  Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.get('last_successful_fetch_timestamp_millis');\n  };\n\n  Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\n    return this.set('last_successful_fetch_timestamp_millis', timestamp);\n  };\n\n  Storage.prototype.getLastSuccessfulFetchResponse = function () {\n    return this.get('last_successful_fetch_response');\n  };\n\n  Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\n    return this.set('last_successful_fetch_response', response);\n  };\n\n  Storage.prototype.getActiveConfig = function () {\n    return this.get('active_config');\n  };\n\n  Storage.prototype.setActiveConfig = function (config) {\n    return this.set('active_config', config);\n  };\n\n  Storage.prototype.getActiveConfigEtag = function () {\n    return this.get('active_config_etag');\n  };\n\n  Storage.prototype.setActiveConfigEtag = function (etag) {\n    return this.set('active_config_etag', etag);\n  };\n\n  Storage.prototype.getThrottleMetadata = function () {\n    return this.get('throttle_metadata');\n  };\n\n  Storage.prototype.setThrottleMetadata = function (metadata) {\n    return this.set('throttle_metadata', metadata);\n  };\n\n  Storage.prototype.deleteThrottleMetadata = function () {\n    return this.delete('throttle_metadata');\n  };\n\n  Storage.prototype.get = function (key) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.get(compositeKey);\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-get\"\n                  /* STORAGE_GET */\n                  ));\n                };\n\n                request.onsuccess = function (event) {\n                  var result = event.target.result;\n\n                  if (result) {\n                    resolve(result.value);\n                  } else {\n                    resolve(undefined);\n                  }\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-get\"\n                /* STORAGE_GET */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  Storage.prototype.set = function (key, value) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.put({\n                  compositeKey: compositeKey,\n                  value: value\n                });\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-set\"\n                  /* STORAGE_SET */\n                  ));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-set\"\n                /* STORAGE_SET */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  Storage.prototype.delete = function (key) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.delete(compositeKey);\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-delete\"\n                  /* STORAGE_DELETE */\n                  ));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-delete\"\n                /* STORAGE_DELETE */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  }; // Facilitates composite key functionality (which is unsupported in IE).\n\n\n  Storage.prototype.createCompositeKey = function (key) {\n    return [this.appId, this.appName, this.namespace, key].join();\n  };\n\n  return Storage;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\n\n\nvar StorageCache =\n/** @class */\nfunction () {\n  function StorageCache(storage) {\n    this.storage = storage;\n  }\n  /**\r\n   * Memory-only getters\r\n   */\n\n\n  StorageCache.prototype.getLastFetchStatus = function () {\n    return this.lastFetchStatus;\n  };\n\n  StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.lastSuccessfulFetchTimestampMillis;\n  };\n\n  StorageCache.prototype.getActiveConfig = function () {\n    return this.activeConfig;\n  };\n  /**\r\n   * Read-ahead getter\r\n   */\n\n\n  StorageCache.prototype.loadFromStorage = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            lastFetchStatusPromise = this.storage.getLastFetchStatus();\n            lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n            activeConfigPromise = this.storage.getActiveConfig();\n            return [4\n            /*yield*/\n            , lastFetchStatusPromise];\n\n          case 1:\n            lastFetchStatus = _a.sent();\n\n            if (lastFetchStatus) {\n              this.lastFetchStatus = lastFetchStatus;\n            }\n\n            return [4\n            /*yield*/\n            , lastSuccessfulFetchTimestampMillisPromise];\n\n          case 2:\n            lastSuccessfulFetchTimestampMillis = _a.sent();\n\n            if (lastSuccessfulFetchTimestampMillis) {\n              this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n            }\n\n            return [4\n            /*yield*/\n            , activeConfigPromise];\n\n          case 3:\n            activeConfig = _a.sent();\n\n            if (activeConfig) {\n              this.activeConfig = activeConfig;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Write-through setters\r\n   */\n\n\n  StorageCache.prototype.setLastFetchStatus = function (status) {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  };\n\n  StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  };\n\n  StorageCache.prototype.setActiveConfig = function (activeConfig) {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  };\n\n  return StorageCache;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\n\n\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n  return new Promise(function (resolve, reject) {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n    var timeout = setTimeout(resolve, backoffMillis); // Adds listener, rather than sets onabort, because signal is a shared object.\n\n    signal.addEventListener(function () {\n      clearTimeout(timeout); // If the request completes before this timeout, the rejection has no effect.\n\n      reject(ERROR_FACTORY.create(\"fetch-throttle\"\n      /* FETCH_THROTTLE */\n      , {\n        throttleEndTimeMillis: throttleEndTimeMillis\n      }));\n    });\n  });\n}\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\n\n\nfunction isRetriableError(e) {\n  if (!(e instanceof util.FirebaseError)) {\n    return false;\n  } // Uses string index defined by ErrorData, which FirebaseError implements.\n\n\n  var httpStatus = Number(e['httpStatus']);\n  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;\n}\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\n\n\nvar RetryingClient =\n/** @class */\nfunction () {\n  function RetryingClient(client, storage) {\n    this.client = client;\n    this.storage = storage;\n  }\n\n  RetryingClient.prototype.fetch = function (request) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var throttleMetadata;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.storage.getThrottleMetadata()];\n\n          case 1:\n            throttleMetadata = _a.sent() || {\n              backoffCount: 0,\n              throttleEndTimeMillis: Date.now()\n            };\n            return [2\n            /*return*/\n            , this.attemptFetch(request, throttleMetadata)];\n        }\n      });\n    });\n  };\n  /**\r\n   * A recursive helper for attempting a fetch request repeatedly.\r\n   *\r\n   * @throws any non-retriable errors.\r\n   */\n\n\n  RetryingClient.prototype.attemptFetch = function (request, _a) {\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis,\n        backoffCount = _a.backoffCount;\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var response, e_1, throttleMetadata;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            return [4\n            /*yield*/\n            , setAbortableTimeout(request.signal, throttleEndTimeMillis)];\n\n          case 1:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            _b.sent();\n\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 5,, 7]);\n\n            return [4\n            /*yield*/\n            , this.client.fetch(request)];\n\n          case 3:\n            response = _b.sent(); // Note the SDK only clears throttle state if response is success or non-retriable.\n\n            return [4\n            /*yield*/\n            , this.storage.deleteThrottleMetadata()];\n\n          case 4:\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            _b.sent();\n\n            return [2\n            /*return*/\n            , response];\n\n          case 5:\n            e_1 = _b.sent();\n\n            if (!isRetriableError(e_1)) {\n              throw e_1;\n            }\n\n            throttleMetadata = {\n              throttleEndTimeMillis: Date.now() + util.calculateBackoffMillis(backoffCount),\n              backoffCount: backoffCount + 1\n            }; // Persists state.\n\n            return [4\n            /*yield*/\n            , this.storage.setThrottleMetadata(throttleMetadata)];\n\n          case 6:\n            // Persists state.\n            _b.sent();\n\n            return [2\n            /*return*/\n            , this.attemptFetch(request, throttleMetadata)];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return RetryingClient;\n}();\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.28\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerRemoteConfig(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new component.Component('remoteConfig', remoteConfigFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setMultipleInstances(true));\n  firebaseInstance.registerVersion(name, version);\n\n  function remoteConfigFactory(container, namespace) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because rc has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate(); // Guards against the SDK being used in non-browser environments.\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"registration-window\"\n      /* REGISTRATION_WINDOW */\n      );\n    } // Normalizes optional inputs.\n\n\n    var _a = app.options,\n        projectId = _a.projectId,\n        apiKey = _a.apiKey,\n        appId = _a.appId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"registration-project-id\"\n      /* REGISTRATION_PROJECT_ID */\n      );\n    }\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"registration-api-key\"\n      /* REGISTRATION_API_KEY */\n      );\n    }\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"registration-app-id\"\n      /* REGISTRATION_APP_ID */\n      );\n    }\n\n    namespace = namespace || 'firebase';\n    var storage = new Storage(appId, app.name, namespace);\n    var storageCache = new StorageCache(storage);\n    var logger$1 = new logger.Logger(name); // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n\n    logger$1.logLevel = logger.LogLevel.ERROR;\n    var restClient = new RestClient(installations, // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n    firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\n    var retryingClient = new RetryingClient(restClient, storage);\n    var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger$1);\n    var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger$1); // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n    remoteConfigInstance.ensureInitialized();\n    return remoteConfigInstance;\n  }\n}\n\nregisterRemoteConfig(firebase__default['default']);\nexports.registerRemoteConfig = registerRemoteConfig;","map":{"version":3,"sources":["/Users/shaunteeshad/__apps/luminous-dashboard/node_modules/@firebase/remote-config/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","firebase","require","tslib","util","logger","component","_interopDefaultLegacy","e","firebase__default","CachingClient","client","storage","storageCache","prototype","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","debug","cacheAgeMillis","Date","now","fetch","request","__awaiter","_a","lastSuccessfulFetchResponse","response","storageOperations","__generator","_b","label","Promise","all","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","sent","eTag","setLastSuccessfulFetchTimestampMillis","status","push","setLastSuccessfulFetchResponse","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","hasErrorCode","errorCode","FirebaseError","code","indexOf","getUserLanguage","navigatorLanguage","navigator","languages","language","RestClient","firebaseInstallations","sdkVersion","namespace","projectId","apiKey","appId","installationId","installationToken","urlBase","url","headers","requestBody","options","fetchPromise","timeoutPromise","originalError_1","responseEtag","config","state","responseBody","originalError_2","getId","getToken","window","FIREBASE_REMOTE_CONFIG_URL_BASE","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","method","body","JSON","stringify","_resolve","reject","signal","addEventListener","error","Error","name","trys","race","create","originalErrorMessage","message","get","undefined","json","httpStatus","RemoteConfigAbortSignal","listeners","listener","abort","forEach","DEFAULT_VALUE_FOR_BOOLEAN","DEFAULT_VALUE_FOR_STRING","DEFAULT_VALUE_FOR_NUMBER","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","toLowerCase","asNumber","num","Number","isNaN","getSource","DEFAULT_FETCH_TIMEOUT_MILLIS","DEFAULT_CACHE_MAX_AGE_MILLIS","RemoteConfig","app","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","logLevel","LogLevel","DEBUG","SILENT","ERROR","enumerable","configurable","getLastFetchStatus","activate","activeConfigEtag","getActiveConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_this","_initializePromise","loadFromStorage","then","abortSignal","e_1","lastFetchStatus","setTimeout","setLastFetchStatus","fetchAndActivate","getAll","getAllKeys","getActiveConfig","reduce","allConfigs","key","getValue","getBoolean","getNumber","getString","activeConfig","String","obj1","obj2","keys","__assign","toFirebaseError","event","originalError","target","APP_NAMESPACE_STORE","DB_NAME","DB_VERSION","openDatabase","resolve","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","Storage","appName","openDbPromise","set","timestamp","etag","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","delete","transaction","objectStore","compositeKey","createCompositeKey","put","join","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","Math","max","timeout","clearTimeout","isRetriableError","RetryingClient","throttleMetadata","backoffCount","attemptFetch","calculateBackoffMillis","version","registerRemoteConfig","firebaseInstance","INTERNAL","registerComponent","Component","remoteConfigFactory","setMultipleInstances","registerVersion","container","getProvider","getImmediate","installations","logger$1","Logger","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar firebase = require('@firebase/app');\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof util.FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = logger.LogLevel.DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = logger.LogLevel.SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = logger.LogLevel.ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return tslib.__awaiter(_this, void 0, void 0, function () {\r\n                            return tslib.__generator(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(tslib.__assign(tslib.__assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof util.FirebaseError)) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + util.calculateBackoffMillis(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.28\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new component.Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n    function remoteConfigFactory(container, namespace) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new Storage(appId, app.name, namespace);\r\n        var storageCache = new StorageCache(storage);\r\n        var logger$1 = new logger.Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger$1.logLevel = logger.LogLevel.ERROR;\r\n        var restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new RetryingClient(restClient, storage);\r\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger$1);\r\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger$1);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(firebase__default['default']);\n\nexports.registerRemoteConfig = registerRemoteConfig;\n"]},"metadata":{},"sourceType":"script"}